{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/App.jsx","index.js","components/ContactItem/ContactItem.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","submitForm","preventDefault","props","onSubmit","resetForm","this","className","s","list","label","htmlFor","input","type","onChange","id","button","Component","Filter","onFilterContact","ContactItem","onDeleteContact","list_item","text","onClick","propTypes","contacts","PropTypes","arrayOf","shape","isRequired","string","bool","func","ContactsList","map","App","filter","handleSubmitForm","newContact","includes","alert","deleteContact","contactId","prevState","contact","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bac8bfd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3cg53\",\"input\":\"Filter_input__2Xojw\",\"finput\":\"Filter_finput__19luR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1Eami\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactForm_list__2BWhr\",\"label\":\"ContactForm_label__261ZX\",\"input\":\"ContactForm_input__2a45Y\",\"button\":\"ContactForm_button__M4ZC7\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport s from '../ContactForm/ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  submitForm = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.list} onSubmit={this.submitForm}>\n        <label className={s.label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label className={s.label} htmlFor={this.numberInputId}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Filter/Filter.module.css';\n\nconst Filter = ({ value, onFilterContact }) => {\n  return (\n    <>\n      <label className={s.label} htmlFor=\"input\">\n        Find contact by name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        id=\"input\"\n        value={value}\n        onChange={onFilterContact}\n      ></input>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilterContact: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../ContactItem/ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={s.list_item} key={id}>\n      <p className={s.text}>{name}:</p>\n      <p className={s.text}>{number}</p>\n      <button className={s.button} onClick={() => onDeleteContact(id)}>\n        Del\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport ContactItem from '../ContactItem/ContactItem';\nimport PropTypes from 'prop-types';\nimport s from '../ContactsList/ContactsList.module.css';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactItem\n        key={id}\n        id={id}\n        name={name}\n        number={number}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </ul>\n);\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.bool.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactsList from './ContactsList/ContactsList';\n\nexport default class App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleSubmitForm = ({ name, number }) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const addNewContact = this.state.contacts\n      .map(({ name }) => name)\n      .includes(name);\n\n    if (addNewContact) {\n      alert(`${newContact.name} is already in your contacts`);\n      return;\n    }\n    this.setState(({ contacts }) => ({ contacts: [newContact, ...contacts] }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.handleSubmitForm} />\n\n          <h2>Contacts</h2>\n          <Filter value={filter} onFilterContact={this.changeFilter} />\n          <ContactsList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_item\":\"ContactItem_list_item__3BeVN\",\"text\":\"ContactItem_text__3Ezgl\",\"button\":\"ContactItem_button__2rqIm\"};"],"sourceRoot":""}