{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","hooks/useLocalStorage.js","components/App.jsx","index.js","components/ContactItem/ContactItem.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","resetForm","className","s","list","preventDefault","label","htmlFor","input","type","onChange","id","button","Filter","onFilterContact","ContactItem","onDeleteContact","list_item","text","onClick","propTypes","contacts","PropTypes","arrayOf","shape","isRequired","string","bool","func","ContactsList","map","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","defaultContacts","App","setContacts","filter","setFilter","newContact","includes","alert","prevState","normalizedFilter","toLowerCase","length","getVisibleContacts","contactId","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57436164.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Filter_list__2Hfr_\",\"label\":\"Filter_label__3cg53\",\"input\":\"Filter_input__2Xojw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1Eami\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactForm_list__2BWhr\",\"label\":\"ContactForm_label__261ZX\",\"input\":\"ContactForm_input__2a45Y\",\"button\":\"ContactForm_button__M4ZC7\"};","import { useState } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport s from '../ContactForm/ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.list} onSubmit={submitForm}>\n      <label className={s.label} htmlFor={nameInputId}>\n        Name\n          <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={nameInputId}\n        />\n      </label>\n      <label className={s.label} htmlFor={numberInputId}>\n        Number\n          <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={numberInputId}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n        </button>\n    </form>\n  );\n\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Filter/Filter.module.css';\n\nconst Filter = ({ value, onFilterContact }) => {\n  return (\n    <form className={s.list}>\n      <label className={s.label} htmlFor=\"input\">\n        Find contact by name\n        <input\n          className={s.input}\n          type=\"text\"\n          id=\"input\"\n          value={value}\n          onChange={onFilterContact}\n        />\n      </label>\n    </form>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilterContact: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../ContactItem/ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={s.list_item} key={id}>\n      <p className={s.text}>{name}:</p>\n      <p className={s.text}>{number}</p>\n      <button className={s.button} onClick={() => onDeleteContact(id)}>\n        Del\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport ContactItem from '../ContactItem/ContactItem';\nimport PropTypes from 'prop-types';\nimport s from '../ContactsList/ContactsList.module.css';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactItem\n        key={id}\n        id={id}\n        name={name}\n        number={number}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </ul>\n);\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.bool.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n    const [state, setState] = useState(() => {\r\n        return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n    });\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n    return [state, setState]\r\n};\r\nexport default useLocalStorage;","import {useState} from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactsList from './ContactsList/ContactsList';\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst defaultContacts = [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ]\n\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts',defaultContacts)\n  const [filter, setFilter] = useState('');\n\n  const handleSubmitForm = ({ name, number }) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const addNewContact = contacts\n      .map(({ name }) => name)\n      .includes(name);\n\n    if (addNewContact) {\n      alert(`${newContact.name} is already in your contacts`);\n      return;\n    }\n    setContacts(prevState => [newContact, ...prevState]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId))\n   };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (filter.length) {\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter),\n      )\n    } else {return contacts}\n  };\n\n    return (\n      <>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={handleSubmitForm} />\n          <h2>Contacts</h2>\n          <Filter value={filter} onFilterContact={changeFilter} />\n          <ContactsList\n            contacts={getVisibleContacts()}\n            onDeleteContact={deleteContact}\n          />\n        </div>\n      </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_item\":\"ContactItem_list_item__3BeVN\",\"text\":\"ContactItem_text__3Ezgl\",\"button\":\"ContactItem_button__2rqIm\"};"],"sourceRoot":""}